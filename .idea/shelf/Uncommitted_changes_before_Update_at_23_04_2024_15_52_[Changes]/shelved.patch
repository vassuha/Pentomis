Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\nimport time\r\n\r\nimport pygame\r\nimport copy\r\nfrom random import choice\r\n\r\npygame.init()\r\nscreenWidth = 1920-500\r\nscreenHeight = 1080-300\r\n\r\nareaWidth = 10\r\nareaHeight = 20\r\nTEXTURE_WIDTH = 54\r\nscreen = pygame.display.set_mode((screenWidth, screenHeight), pygame.RESIZABLE)\r\n\r\nclass Figure:\r\n    def __init__(self, name, area, form, rotationAngle, position, color, center):\r\n        self.name = name\r\n        self.form = form\r\n        self.area = area\r\n        self.rotationAngle = rotationAngle\r\n        self.position = [0, 8]\r\n        self.center = center\r\n\r\n    def rotate(self, area):\r\n        for i in range(len(self.form)):\r\n            for j in range(len(self.form)):\r\n                if (self.form[i][j] > 0):\r\n                    area[self.position[0] + i][self.position[1] + j] = 0\r\n        tempForm = copy.deepcopy(self.form)\r\n        n = len(tempForm)\r\n        for i in range(len(self.form)):\r\n            for j in range(len(self.form)):\r\n                self.form[i][j] = tempForm[n-j-1][i]\r\n\r\n        centerOld = copy.deepcopy(self.center)\r\n        temp = copy.deepcopy(self.center[0])\r\n        self.center[0] = self.center[1]\r\n        self.center[1] = n - temp - 1\r\n\r\n        positionOld = copy.deepcopy(self.position)\r\n\r\n        self.position[0] += -self.center[0] +centerOld[0]\r\n        self.position[1] += -self.center[1] +centerOld[1]\r\n\r\n        for i in range(len(self.form)):\r\n            for j in range(len(self.form)):\r\n                if (area[self.position[0] + i][self.position[1] + j] >0) and (self.form[i][j] >0):\r\n                    self.position = copy.deepcopy(positionOld)\r\n                    self.form = copy.deepcopy(tempForm)\r\n                    self.center = copy.deepcopy(centerOld)\r\n                    for i in range(len(self.form)):\r\n                        for j in range(len(self.form)):\r\n                            if self.form[i][j] > 0:\r\n                                area[self.position[0] + i][self.position[1] + j] = self.form[i][j]\r\n                    return False\r\n        for i in range(len(self.form)):\r\n            for j in range(len(self.form)):\r\n                if self.form[i][j] > 0:\r\n                    area[self.position[0] + i][self.position[1] + j] = self.form[i][j]\r\n\r\n\r\n    def move(self, area, dir):\r\n        if dir == \"right\":\r\n            if self.position[1] + len(self.form) + 1 > len(area[0]):\r\n                return False\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if(self.form[i][j] > 0):\r\n                        area[self.position[0] + i][self.position[1] + j] = 0\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if ((area[self.position[0] + i][self.position[1] + j + 1] > 0) and (self.form[i][j] > 0)) or (self.form[i][j] > 0 and (self.position[1]+j) > 12):\r\n                        for i in range(len(self.form)):\r\n                            for j in range(len(self.form)):\r\n                                if (self.form[i][j] > 0):\r\n                                    area[self.position[0] + i][self.position[1] + j] = self.form[i][j]\r\n                        return False\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if self.form[i][j] > 0:\r\n                        area[self.position[0] + i][self.position[1] + j + 1] = self.form[i][j]\r\n            self.position[1] += 1\r\n        if dir == \"left\":\r\n            if self.position[1] < 1:\r\n                return False\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if(self.form[i][j] > 0):\r\n                        area[self.position[0] + i][self.position[1] + j] = 0\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if ((area[self.position[0] + i][self.position[1] + j - 1] > 0) and (self.form[i][j] > 0)) or (self.form[i][j] > 0 and (self.position[1]+j) < 5):\r\n                        for i in range(len(self.form)):\r\n                            for j in range(len(self.form)):\r\n                                if (self.form[i][j] > 0):\r\n                                    area[self.position[0] + i][self.position[1] + j] = self.form[i][j]\r\n                        return False\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if self.form[i][j] > 0:\r\n                        area[self.position[0] + i][self.position[1] + j - 1] = self.form[i][j]\r\n            self.position[1] -= 1\r\n        if dir == \"down\":\r\n            if self.position[0] + len(self.form) > len(area) - 1:\r\n                return False\r\n\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if(self.form[i][j] > 0):\r\n                        area[self.position[0] + i][self.position[1] + j] = 0\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if ((area[self.position[0] + i + 1][self.position[1] + j] >0) and (self.form[i][j] > 0)) or (self.form[i][j] > 0 and (self.position[0]+i) > 22):\r\n                        for i in range(len(self.form)):\r\n                            for j in range(len(self.form)):\r\n                                if (self.form[i][j] > 0):\r\n                                    area[self.position[0] + i][self.position[1] + j] = self.form[i][j]\r\n                        return False\r\n            for i in range(len(self.form)):\r\n                for j in range(len(self.form)):\r\n                    if self.form[i][j] > 0:\r\n                        area[self.position[0] + i + 1][self.position[1] + j] = self.form[i][j]\r\n            self.position[0] += 1\r\n            return True\r\n\r\n    def throw(self, area):\r\n        while self.move(area, \"down\"):\r\n            pass\r\n\r\ndef spawn(area, figure):\r\n    figure.position[1] = len(area[0])//2 - len(figure.form)//2\r\n    figure.position[0] = 3\r\n    figure.rotationAngle = 0\r\n    for i in range(len(figure.form)):\r\n        for j in range(len(figure.form)):\r\n            if area[figure.position[0] + i][figure.position[1] + j] == 0:\r\n                area[figure.position[0] + i][figure.position[1] + j] = figure.form[i][j]\r\n            else:\r\n                return False\r\n    return True\r\n\r\ndef checkCollision(area, figure):\r\n    for i in range(len(figure.form)):\r\n        for j in range(len(figure.form)):\r\n            if figure.form[i][j] > 0  and area[figure.position[0] + i+1][figure.position[1] + j] > 0:\r\n                if i < len(figure.form)-1:\r\n                    if figure.form[i+1][j] == 0:\r\n                        return True\r\n                else:\r\n                    return True\r\n    return False\r\n\r\ndef checkLine(area, score):\r\n    lines = [0] * 28\r\n    for i in range(3, 24):\r\n        isLine = True\r\n        for j in range(4, 14):\r\n            if area[i][j] == 0:\r\n                isLine = False\r\n        if isLine:\r\n            lines[i] = 1\r\n    for k in range(3, 24):\r\n        if lines[k] == 1:\r\n            for i in range(k, 3, -1):\r\n                area[i] = area[i - 1]\r\n            area[3] = [0] * 18\r\n            area[3][3] = 1\r\n            area[3][14] = 1\r\n    #Отладкаааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааа\r\n    score += sum(lines[3:24])\r\n    return score\r\n\r\ndef checkEnd(area):\r\n    for j in range(4, 14):\r\n        if area[4][j] > 0:\r\n            return True\r\n\r\n\r\nclock = pygame.time.Clock()\r\n\r\nrunning = True\r\narea = []\r\nfor i in range(28):\r\n    area.append([0] * 18)\r\n    area[i][3] = 1;\r\n    area[i][14] = 1;\r\narea[24] = [1]*18\r\n\r\nfigures = []\r\n\r\n\r\n#figures.append(Figure(\"\", area, [[0, 0, 0], [0, 0, 0], [0, 0, 0]], 0, (0, 0), \"\", [, ]))\r\nfigures.append(Figure(\"1\", area, [[0, 0, 0], [1, 1, 0], [0, 1, 1]], 0, (0, 0), \"red\", [1, 1]))\r\nfigures.append(Figure(\"2\", area, [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 2, 2, 2]], 0, (0, 0), \"\", [3, 2]))\r\nfigures.append(Figure(\"3\", area, [[0, 0, 0], [3, 0, 0], [3, 3, 3]], 0, (0, 0), \"\", [2, 1]))\r\nfigures.append(Figure(\"4\", area, [[0, 0, 0], [0, 0, 4], [4, 4, 4]], 0, (0, 0), \"orange\", [2, 1]))\r\nfigures.append(Figure(\"5\", area, [[0, 0, 0], [5, 5, 0], [5, 5, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"6\", area, [[0, 0, 0], [0, 6, 6], [6, 6, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"7\", area, [[0, 0, 0], [0, 7, 0], [7, 7, 7]], 0, (0, 0), \"\", [2, 1]))\r\nfigures.append(Figure(\"8\", area, [[8, 0], [8, 8]], 0, (0, 0), \"\", [1, 0]))\r\nfigures.append(Figure(\"9\", area, [[9, 9, 0], [0, 9, 9], [0, 9, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"10\", area, [[0, 0, 0, 0], [0, 0, 0, 0], [10, 10, 0, 0], [0, 10, 10, 10]], 0, (0, 0), \"\", [2, 1]))\r\nfigures.append(Figure(\"11\", area, [[0, 11, 11], [11, 11, 0], [0, 11, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"12\", area, [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 12, 12], [12, 12, 12, 0]], 0, (0, 0), \"\", [3, 2]))\r\nfigures.append(Figure(\"13\", area, [[13, 13, 0], [0, 13, 0], [0, 13, 13]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"14\", area, [[0, 0, 0], [14, 0, 14], [14, 14, 14]], 0, (0, 0), \"\", [2, 1]))\r\n#figures.append(Figure(\"15\", area, [[0, 15, 0], [15, 15, 15], [0, 15, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"16\", area, [[16, 16, 16], [0, 16, 0], [0, 16, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"17\", area, [[17, 0, 0], [17, 17, 0], [17, 17, 0]], 0, (0, 0), \"\", [1, 0]))\r\n#figures.append(Figure(\"18\", area, [[18, 0, 0], [18, 0, 0], [18, 18, 18]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"19\", area, [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 19, 0], [19, 19, 19, 19]], 0, (0, 0), \"\", [3, 2]))\r\nfigures.append(Figure(\"20\", area, [[0, 20, 20], [0, 20, 0], [20, 20, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"21\", area, [[0, 21, 0], [21, 21, 0], [21, 21, 0]], 0, (0, 0), \"\", [1, 1]))\r\nfigures.append(Figure(\"22\", area, [[0, 0, 0, 0], [0, 0, 0, 0], [22, 22, 22, 22],[0, 0, 22, 0]], 0, (0, 0), \"\", [2, 2]))\r\n\r\nbgColor = 'Black'\r\nscreen.fill(bgColor)\r\ntempFigure = choice(figures)\r\n\r\nspawn(area, tempFigure)\r\n\r\nmyFont = pygame.font.SysFont('Arial', 20)\r\ntext1 = [0]*28\r\nfor i in range(28):\r\n    s = str(area[i])\r\n    s = s.replace(\"1\", \"@\");\r\n    s = s.replace(\"1\", \" \");\r\n    text1[i] = myFont.render(s, True, \"White\")\r\n\r\nisMove = False\r\n\r\ndef timer(score=0):\r\n    t=900-score*10\r\n    if t<75:\r\n        t = 75\r\n    return t\r\n\r\n\r\nMOVEMENT, T= pygame.USEREVENT, timer()\r\npygame.time.set_timer(MOVEMENT, T)\r\n\r\ntry:\r\n    f = open(\"record.txt\")\r\nexcept FileNotFoundError:\r\n    f = open(\"record.txt\", \"w\")\r\n    f.write(\"0\" + \"\\n\")\r\n\r\nblocks = []\r\nblocks.append(pygame.image.load(\"img/textures/Pentomis_texture_\" + str(20) + \".png\").convert())\r\nfor i in range(1, 22+1):\r\n    blocks.append(pygame.image.load(\"img/textures/Pentomis_texture_\" + str(i) + \".png\").convert())\r\ndef renderGameplay(area, background, score, blocks, nextFigure):\r\n    bg = pygame.transform.scale(pygame.image.load(background).convert(), (screenWidth, screenHeight))\r\n\r\n    blockHeight = int(screenHeight//areaHeight*0.9)\r\n    border = screenHeight//(270)\r\n\r\n    screen.blit(bg, (0, 0)) #вывод\r\n    meshColor = (120, 122, 130)\r\n    mesh = pygame.Surface(( blockHeight*areaWidth+border, blockHeight*(areaHeight+1)+border//2))\r\n    #mesh = pygame.Surface(( 100, 100))\r\n    #mesh.fill(meshColor)\r\n    mesh.set_alpha(200)\r\n\r\n    #pygame.draw.rect(screen, meshColor, (screenWidth//2-blockHeight*(areaWidth//2-1)-border//2, screenHeight//2-blockHeight*(areaHeight//2), blockHeight*areaWidth+border, blockHeight*(areaHeight+1)+border//2), border)\r\n    pygame.draw.rect(mesh, meshColor, (0, 0, blockHeight*areaWidth+border, blockHeight*(areaHeight+1)+border//2), border)\r\n\r\n    for i in range(areaWidth):\r\n        pygame.draw.line(mesh, meshColor, (i*blockHeight, 0), (i*blockHeight, blockHeight*(areaHeight+1)))\r\n    for i in range(1, areaHeight+1):\r\n        pygame.draw.line(mesh, meshColor, (0, i*blockHeight), (blockHeight*areaWidth, i*blockHeight))\r\n\r\n    screen.blit(mesh, (screenWidth // 2 - blockHeight * (areaWidth // 2 - 1) - border // 2,\r\n                       screenHeight // 2 - blockHeight * (areaHeight // 2)))\r\n    for i in range(3, 24):\r\n        for j in range(4, 14):\r\n            if area[i][j] >0:\r\n                screen.blit(pygame.transform.scale(blocks[area[i][j]], (blockHeight, blockHeight)), (screenWidth//2+(j-8)*blockHeight, screenHeight//2+(i-13)*blockHeight))\r\n\r\n    #Отображение текущего счета\r\n    scoreAreaHeight = screenHeight//9\r\n    scoreAreaWidth = scoreAreaHeight\r\n    gameplayFont =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', screenHeight//50)\r\n    gameplayFont1 =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', screenHeight//20)\r\n    scoreArea = pygame.Surface((scoreAreaWidth, scoreAreaHeight), pygame.SRCALPHA)\r\n    scoreText = gameplayFont.render(\"SCORE\", True, \"White\")\r\n    scoreText1 = gameplayFont1.render(str(score), True, \"White\")\r\n    translucentArea = pygame.Surface((scoreAreaWidth, scoreAreaHeight), pygame.SRCALPHA)\r\n    translucentArea.set_alpha(200)\r\n    pygame.draw.rect(translucentArea, (0, 0, 0), (0, 0, scoreAreaHeight, scoreAreaHeight), scoreAreaHeight, scoreAreaHeight//4)\r\n    pygame.draw.rect(translucentArea, meshColor, (0, 0, scoreAreaHeight, scoreAreaHeight), border, scoreAreaHeight // 4)\r\n    scoreArea.blit(translucentArea, (0, 0))\r\n    scoreArea.blit(scoreText, (0+screenHeight/100, 0+screenHeight/100))\r\n    scoreArea.blit(scoreText1, (0+screenHeight/100- (len(str(score))-1)*screenHeight//80 +screenHeight//40, 0+screenHeight/100+ screenHeight/50))\r\n    screen.blit(scoreArea, (screenWidth // 2 - blockHeight * (areaWidth // 2 - 1) + blockHeight * areaWidth + border*10, screenHeight // 2 - blockHeight * (areaHeight // 2)))\r\n\r\n    #Отображение следующей детали\r\n    nextFigureAreaHeight = screenHeight // 4\r\n    nextFigureAreaWidth = nextFigureAreaHeight\r\n    nextFigureArea = pygame.Surface((nextFigureAreaWidth, nextFigureAreaHeight), pygame.SRCALPHA)\r\n    nextFigureTranslucentArea = pygame.Surface((nextFigureAreaWidth, nextFigureAreaHeight), pygame.SRCALPHA)\r\n    nextFigureTranslucentArea.set_alpha(200)\r\n    pygame.draw.rect(nextFigureTranslucentArea, (0, 0, 0), (0, 0, nextFigureAreaWidth, nextFigureAreaWidth), nextFigureAreaWidth, scoreAreaHeight // 4)\r\n    pygame.draw.rect(nextFigureTranslucentArea, meshColor, (0, 0, nextFigureAreaWidth, nextFigureAreaWidth), border, scoreAreaHeight // 4)\r\n    nextFigureArea.blit(nextFigureTranslucentArea, (0, 0))\r\n\r\n    for i in range(len(nextFigure.form)):\r\n        for j in range(len(nextFigure.form[i])):\r\n            if nextFigure.form[i][j] > 0:\r\n                #nextFigureArea.blit(pygame.transform.scale(blocks[nextFigure.form[i][j]], (blockHeight, blockHeight)), (j*blockHeight + (nextFigureAreaHeight//2 - (len(nextFigure.form)+1)//2*blockHeight) + (((len(nextFigure.form)-1)/2+1+len(nextFigure.form)%2)-nextFigure.center[1])*blockHeight, (i)*blockHeight+ (nextFigureAreaHeight//2 - (len(nextFigure.form)+1)//2*blockHeight)+ (((len(nextFigure.form)-1)/2+1+len(nextFigure.form)%2)-nextFigure.center[0])*blockHeight))\r\n                nextFigureArea.blit(pygame.transform.scale(blocks[nextFigure.form[i][j]], (blockHeight, blockHeight)), (j*blockHeight + nextFigureAreaHeight//2-len(nextFigure.form)*blockHeight//2 , i*blockHeight + nextFigureAreaHeight//2-(len(nextFigure.form) + (len(nextFigure.form)-3)*(nextFigure.center[0]))*blockHeight//2 ))\r\n    screen.blit(nextFigureArea, (\r\n    screenWidth // 2 - blockHeight * (areaWidth // 2 - 1) + blockHeight * areaWidth + border * 10,\r\n    screenHeight // 2 - blockHeight * (areaHeight // 2) + scoreAreaHeight + border*10))\r\n\r\n    pygame.display.update()\r\n\r\n\r\n#звук не знал куда поставить, чтобы не обновлялось меняяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяяять\r\nsound = 2\r\nflag = False\r\ndef renderStartMenu():\r\n    global sound\r\n    global flag\r\n    background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/Start1.png\"), (screenWidth, screenHeight))\r\n    screen.blit(background, (0, 0))\r\n    if screenHeight > screenWidth:\r\n        squareWidth = screenHeight//5\r\n    else:\r\n        squareWidth = screenWidth//5\r\n    pygame.draw.rect(screen, (71, 178, 255), pygame.Rect(screenWidth//2 - squareWidth//2, screenHeight//2 - squareWidth//2, squareWidth, squareWidth), screenWidth,squareWidth//12)\r\n\r\n    if sound == 2:\r\n        pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 40 , screenHeight // 30 , squareWidth//5,squareWidth//5), screenWidth, squareWidth //3 // 12)#квадрат для динамика\r\n        background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speaker.png\"), (squareWidth//6, squareWidth//6)) #картинка динамика\r\n        screen.blit(background, (screenWidth // 35 , screenHeight // 26 ))\r\n    elif sound == 1:\r\n        pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 40 , screenHeight // 30 , squareWidth//5,squareWidth//5), screenWidth, squareWidth //3 // 12)#квадрат для динамика\r\n        background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speakerOnLow.png\"), (squareWidth//6, squareWidth//6)) #картинка динамика\r\n        screen.blit(background, (screenWidth // 35 , screenHeight // 26 ))\r\n    else:\r\n        pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 40 , screenHeight // 30 , squareWidth//5,squareWidth//5), screenWidth, squareWidth //3 // 12)#квадрат для динамика\r\n        background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speakerOff.png\"), (squareWidth//6, squareWidth//6)) #картинка динамика\r\n        screen.blit(background, (screenWidth // 35 , screenHeight // 26 ))\r\n    mouse1, mouse2, mouse3 = pygame.mouse.get_pressed()\r\n    x, y = pygame.mouse.get_pos()\r\n    if screenWidth // 50 < x < screenWidth // 40 * 2.7:\r\n        if screenHeight // 36 < y < screenHeight // 25 * 2.7:\r\n            if sound == 2:\r\n                if mouse1 == False: flag = True\r\n                pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 45, screenHeight // 35, squareWidth // 5 + squareWidth // 30, squareWidth // 5 + squareWidth // 30),screenWidth, squareWidth // 3 // 12)  # квадрат для динамика\r\n                background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speaker.png\"),(squareWidth // 5.3, squareWidth // 5.3))  # картинка динамика\r\n                screen.blit(background, (screenWidth // 37, screenHeight // 28))\r\n                print(flag, mouse1)\r\n                if mouse1 == True and flag == True:\r\n                    sound = 1\r\n                    flag = False\r\n                    print(x, y)\r\n            elif sound == 1:\r\n                if mouse1 == False: flag = 1\r\n                pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 45, screenHeight // 35, squareWidth // 5 + squareWidth // 30, squareWidth // 5 + squareWidth // 30),screenWidth, squareWidth // 3 // 12)  # квадрат для динамика\r\n                background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speakerOnLow.png\"),(squareWidth // 5.3, squareWidth // 5.3))  # картинка динамика\r\n                screen.blit(background, (screenWidth // 37, screenHeight // 28))\r\n                if mouse1 == True and flag == True:\r\n                    sound = 0\r\n                    flag = False\r\n                    print(x, y)\r\n            else:\r\n                if mouse1 == False: flag = 1\r\n                pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 45, screenHeight // 35, squareWidth // 5 + squareWidth // 30, squareWidth // 5 + squareWidth // 30),screenWidth, squareWidth // 3 // 12)  # квадрат для динамика\r\n                background = pygame.transform.scale(pygame.image.load(\"img/backgrounds/speakerOff.png\"),(squareWidth // 5.3, squareWidth // 5.3))  # картинка динамика\r\n                screen.blit(background, (screenWidth // 37, screenHeight // 28))\r\n                if mouse1 == True and flag == True:\r\n                    sound = 2\r\n                    flag = False\r\n                    print(x, y)\r\n\r\n\r\n    startFont =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', squareWidth//15)\r\n    startText = startFont.render(\"Enter any key to start\", True, \"White\")\r\n    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//50, screenHeight//2 - squareWidth//2 + squareWidth//9 * 2.5))\r\n    startText = startFont.render(\"Press F to turn off the sound\", True, \"White\")\r\n    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//50, screenHeight//2 - squareWidth//2 + squareWidth//9 * 3.5))\r\n    startFont =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', squareWidth//7)\r\n    startText = startFont.render(\"Pentomis\", True, \"White\")\r\n    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//9  , screenHeight//2 - squareWidth//2 + squareWidth//9))\r\n\r\n    pygame.display.update()\r\n\r\n\r\nwhile running:\r\n    #Создание игрового поля\r\n    area = []\r\n    for i in range(28):\r\n        area.append([0] * 18)\r\n        area[i][3] = 1;\r\n        area[i][14] = 1;\r\n    area[24] = [1] * 18\r\n\r\n    score = 0\r\n    bgColor = 'Black'\r\n    screen.fill(bgColor)\r\n\r\n    tempFigure = choice(figures)\r\n    nextFigure = copy.deepcopy(choice(figures))\r\n    spawn(area, tempFigure)\r\n\r\n    #Стартовое меню\r\n    gameplay = False\r\n    screen.fill(bgColor)\r\n    screen.blit(myFont.render(\"Press any key to continue\", True, \"White\"), (0, 20))\r\n    while not gameplay:\r\n        screenWidth = screen.get_size()[0]\r\n        screenHeight = screen.get_size()[1]\r\n        renderStartMenu()\r\n        for event in pygame.event.get():\r\n            if event.type == event.type == pygame.KEYDOWN:\r\n                gameplay = True\r\n\r\n    pygame.event.clear()\r\n    ready = False\r\n    while not ready:\r\n        for e in pygame.event.get():\r\n            if e.type == pygame.KEYUP:\r\n                ready = True\r\n    #Игровой процесс\r\n    while gameplay:\r\n\r\n        keys = pygame.key.get_pressed()\r\n        if (keys[pygame.K_RIGHT] or keys[pygame.K_d]) and isMove==False:\r\n            #isMove = True\r\n            tempFigure.move(area, \"right\")\r\n        if (keys[pygame.K_LEFT] or keys[pygame.K_a]) and isMove==False:\r\n            #isMove = True\r\n            tempFigure.move(area, \"left\")\r\n        if (keys[pygame.K_DOWN] or keys[pygame.K_s]) and isMove==False:\r\n            isMove = True\r\n            tempFigure.throw(area)\r\n        if (keys[pygame.K_UP] or keys[pygame.K_w]) and isMove==False:\r\n            isMove = True\r\n            tempFigure.rotate(area)\r\n\r\n        screenWidth = screen.get_size()[0]\r\n        screenHeight = screen.get_size()[1]\r\n        renderGameplay(area, \"img/backgrounds/Minimalistic_landscape_1.jpg\", score, blocks, nextFigure)\r\n        #Отрисовка\r\n        # screen.fill(bgColor)\r\n        # for i in range(3, 24):\r\n        #     s = str(area[i][4:14])\r\n        #     #s = s.replace(\"1\", \"@\");\r\n        #     s = s.replace(\"2\", \"  \");\r\n        #     text1[i] = myFont.render(s, True, \"White\")\r\n        #     screen.blit(text1[i], (0, i*20))\r\n\r\n        pygame.display.update()\r\n\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT or (event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE):\r\n                running = False\r\n                pygame.quit()\r\n                sys.exit()\r\n            if event.type == MOVEMENT:\r\n                if checkCollision(area, tempFigure):\r\n                    score = checkLine(area, score)\r\n                    if checkEnd(area):\r\n                        gameplay = False\r\n                    tempFigure = nextFigure\r\n                    nextFigure = copy.deepcopy(choice(figures))\r\n                    if not spawn(area, tempFigure):\r\n                        gameplay = False\r\n                    #isMove = False\r\n                    pygame.display.update()\r\n                tempFigure.move(area, \"down\")\r\n                pygame.display.update()\r\n                MOVEMENT, T = pygame.USEREVENT, timer(score)\r\n                pygame.time.set_timer(MOVEMENT, T)\r\n            if event.type == pygame.KEYUP:\r\n                if event.key == pygame.K_RIGHT or event.key == pygame.K_d:\r\n                    isMove = False\r\n            if event.type == pygame.KEYUP:\r\n                if event.key == pygame.K_LEFT or event.key == pygame.K_a:\r\n                    isMove = False\r\n            if event.type == pygame.KEYUP:\r\n                if event.key == pygame.K_UP or event.key == pygame.K_w:\r\n                    isMove = False\r\n            if event.type == pygame.KEYUP:\r\n                if event.key == pygame.K_DOWN or event.key == pygame.K_s:\r\n                    isMove = False\r\n\r\n\r\n        clock.tick(60)\r\n\r\n\r\n    #Завершающее меню\r\n    with open(\"record.txt\") as f:\r\n        record = int(f.readline())\r\n    if score > record:\r\n        record = score\r\n    with open(\"record.txt\", \"w\") as f:\r\n            f.write(str(record) + \"\\n\")\r\n    screen.fill(bgColor)\r\n    screen.blit(myFont.render(\"You lose. Score: \" + str(score) + \" , record: \" + str(record), True, \"White\"), (0, 20))\r\n    screen.blit(myFont.render(\"Do you want to continue?\", True, \"White\"), (0, 100))\r\n    screen.blit(myFont.render(\"Play again (Y)                   Quit (N)\", True, \"White\"), (0, 200))\r\n    pygame.display.update()\r\n    time.sleep(0.5)\r\n\r\n    #Продолжить или завершить\r\n    isContinue = False\r\n    while not isContinue:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_y:\r\n                    isContinue = True\r\n                if event.key == pygame.K_n:\r\n                    running = False\r\n                    print(\"Stop\")\r\n                    isContinue = True\r\nrunning = False\r\npygame.quit()\r\nsys.exit()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 7c0a44b0f32e28b23f90e05fef2e995376fd9fcd)
+++ b/main.py	(date 1713876542406)
@@ -330,7 +330,7 @@
         squareWidth = screenHeight//5
     else:
         squareWidth = screenWidth//5
-    pygame.draw.rect(screen, (71, 178, 255), pygame.Rect(screenWidth//2 - squareWidth//2, screenHeight//2 - squareWidth//2, squareWidth, squareWidth), screenWidth,squareWidth//12)
+    pygame.draw.rect(screen, (0, 0, 0), pygame.Rect(screenWidth//2 - squareWidth//2, screenHeight//2 - squareWidth//2, squareWidth, squareWidth), screenWidth,squareWidth//12)
 
     if sound == 2:
         pygame.draw.rect(screen, (71, 178, 255),pygame.Rect(screenWidth // 40 , screenHeight // 30 , squareWidth//5,squareWidth//5), screenWidth, squareWidth //3 // 12)#квадрат для динамика
@@ -376,16 +376,15 @@
                     sound = 2
                     flag = False
                     print(x, y)
-
-
-    startFont =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', squareWidth//15)
-    startText = startFont.render("Enter any key to start", True, "White")
-    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//50, screenHeight//2 - squareWidth//2 + squareWidth//9 * 2.5))
-    startText = startFont.render("Press F to turn off the sound", True, "White")
-    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//50, screenHeight//2 - squareWidth//2 + squareWidth//9 * 3.5))
+    buttonPlay = pygame.transform.scale(pygame.image.load("img/backgrounds/buttonPlay2W.png"),(squareWidth // 2, squareWidth // 2))  # картинка динамика
+    screen.blit(buttonPlay, (screenWidth // 2 - squareWidth // 2 * 0.45, screenHeight // 2 - squareWidth // 2 * 0.35))
+    if screenWidth // 50 < x < screenWidth // 40 * 2.7:
+        if screenHeight // 36 < y < screenHeight // 25 * 2.7:
+            buttonPlay = pygame.transform.scale(pygame.image.load("img/backgrounds/buttonPlay2W.png"),(squareWidth // 1.7, squareWidth // 1.7))  # картинка динамика
+            screen.blit(buttonPlay, (screenWidth//2 - squareWidth//2 * 0.5   , screenHeight//2 - squareWidth//2 * 0.4))
     startFont =pygame.font.Font('fonts/RubikMonoOne-Regular.ttf', squareWidth//7)
     startText = startFont.render("Pentomis", True, "White")
-    screen.blit(startText, (screenWidth//2 - squareWidth//2 + squareWidth//9  , screenHeight//2 - squareWidth//2 + squareWidth//9))
+    screen.blit(startText, (screenWidth//2 - squareWidth//2 * 0.95   , screenHeight//2 - squareWidth//2 + squareWidth//9))
 
     pygame.display.update()
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"152454ad-6c52-484e-bc30-826792bdf9ef\" name=\"Changes\" comment=\"Добавлено управление на ASWD\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/img/backgrounds/speaker.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/img/backgrounds/speaker.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/img/backgrounds/speakerOff.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/img/backgrounds/speakerOff.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/img/backgrounds/speakerOnLow.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/img/backgrounds/speakerOnLow.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;vassuha&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/vassuha/Pentomis.git&quot;,\r\n    &quot;accountId&quot;: &quot;9b945318-f832-4f1f-8cb3-870d4b669b49&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2egKUqaDEdVAUdlBtkCFZYxDeEd\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Pentomis\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.9 (Pentomis_project)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-PY-241.14494.241\" />\r\n        <option value=\"bundled-python-sdk-0509580d9d50-28c9f5db9ffe-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.14494.241\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"152454ad-6c52-484e-bc30-826792bdf9ef\" name=\"Changes\" comment=\"\" />\r\n      <created>1712320799566</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712320799566</updated>\r\n      <workItem from=\"1712320806500\" duration=\"21000\" />\r\n      <workItem from=\"1712337640356\" duration=\"182000\" />\r\n      <workItem from=\"1712337834421\" duration=\"7111000\" />\r\n      <workItem from=\"1712396771505\" duration=\"1828000\" />\r\n      <workItem from=\"1712498705248\" duration=\"989000\" />\r\n      <workItem from=\"1712500494701\" duration=\"5261000\" />\r\n      <workItem from=\"1712588028234\" duration=\"8975000\" />\r\n      <workItem from=\"1712656724473\" duration=\"22186000\" />\r\n      <workItem from=\"1712820084304\" duration=\"17611000\" />\r\n      <workItem from=\"1713185670613\" duration=\"3305000\" />\r\n      <workItem from=\"1713457204768\" duration=\"1788000\" />\r\n      <workItem from=\"1713636640164\" duration=\"8882000\" />\r\n      <workItem from=\"1713698177372\" duration=\"4607000\" />\r\n      <workItem from=\"1713703171354\" duration=\"26527000\" />\r\n      <workItem from=\"1713777656459\" duration=\"5854000\" />\r\n      <workItem from=\"1713791052102\" duration=\"192000\" />\r\n      <workItem from=\"1713791253234\" duration=\"15000\" />\r\n      <workItem from=\"1713791276607\" duration=\"936000\" />\r\n      <workItem from=\"1713792227757\" duration=\"350000\" />\r\n      <workItem from=\"1713792596751\" duration=\"162000\" />\r\n      <workItem from=\"1713792768887\" duration=\"6680000\" />\r\n      <workItem from=\"1713800324043\" duration=\"12785000\" />\r\n      <workItem from=\"1713859110410\" duration=\"10556000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Добавлен спавн фигур и перемещение (только вправо)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712498793741</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712498793741</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Реализованы все базовые механики, кроме проигрыша. Игра без графического интерфейса, вывод через текстовый вывод матрицы\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712847605440</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712847605440</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Реализован проигрыш, запись рекорда в файл. Добалено стартовое и закрывающее меню\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713700265037</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713700265037</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Изменена механика просчета коллизий, вследствии чего стало возможным &quot;скольжение&quot; фигуры по плоской поверхности под ней\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713702916130</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713702916130</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Добавлен базовый графический интерфейс, текстурированы фигуры\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713733690034</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713733690034</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Исправлен баг с щелями между блоками, добавлена сетка. В комммит добавлены а папка img\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713791515550</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713791515550</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Добалено отображение текущего счета на экране\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713805189867</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713805189867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Добавлены все фигуры, изменена физика сдвига вправо-влево\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713862475508</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713862475508</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Добавлено управление на ASWD\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713870526574</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713870526574</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Добавлен спавн фигур и перемещение (только вправо)\" />\r\n    <MESSAGE value=\"Реализованы все базовые механики, кроме проигрыша. Игра без графического интерфейса, вывод через текстовый вывод матрицы\" />\r\n    <MESSAGE value=\"Реализован проигрыш, запись рекорда в файл. Добалено стартовое и закрывающее меню\" />\r\n    <MESSAGE value=\"Изменена механика просчета коллизий, вследствии чего стало возможным &quot;скольжение&quot; фигуры по плоской поверхности под ней\" />\r\n    <MESSAGE value=\"Добавлен базовый графический интерфейс, текстурированы фигуры\" />\r\n    <MESSAGE value=\"Исправлен баг с щелями между блоками, добавлена сетка. В комммит добавлены а папка img\" />\r\n    <MESSAGE value=\"Добалено отображение текущего счета на экране\" />\r\n    <MESSAGE value=\"Добавлены все фигуры, изменена физика сдвига вправо-влево\" />\r\n    <MESSAGE value=\"Добавлено управление на ASWD\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Добавлено управление на ASWD\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Pentomis$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1713873405115\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7c0a44b0f32e28b23f90e05fef2e995376fd9fcd)
+++ b/.idea/workspace.xml	(date 1713876750568)
@@ -4,11 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="152454ad-6c52-484e-bc30-826792bdf9ef" name="Changes" comment="Добавлено управление на ASWD">
+    <list default="true" id="152454ad-6c52-484e-bc30-826792bdf9ef" name="Changes" comment="Добавлены все фигуры, изменена физика сдвига вправо-влево">
+      <change afterPath="$PROJECT_DIR$/img/backgrounds/buttonPlay.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/img/backgrounds/buttonPlay2W.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/img/backgrounds/speaker.png" beforeDir="false" afterPath="$PROJECT_DIR$/img/backgrounds/speaker.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/img/backgrounds/speakerOff.png" beforeDir="false" afterPath="$PROJECT_DIR$/img/backgrounds/speakerOff.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/img/backgrounds/speakerOnLow.png" beforeDir="false" afterPath="$PROJECT_DIR$/img/backgrounds/speakerOnLow.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -29,6 +29,7 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -54,21 +55,27 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python.main.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "C:/Users/Stas 04 2022/PycharmProjects/Pentomis6/img/backgrounds",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "terminal",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Stas 04 2022\PycharmProjects\Pentomis6\img\backgrounds" />
+    </key>
+  </component>
   <component name="RunManager">
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="Pentomis" />
@@ -79,7 +86,6 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="SDK_NAME" value="Python 3.9 (Pentomis_project)" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
@@ -133,7 +139,7 @@
       <workItem from="1713792596751" duration="162000" />
       <workItem from="1713792768887" duration="6680000" />
       <workItem from="1713800324043" duration="12785000" />
-      <workItem from="1713859110410" duration="10556000" />
+      <workItem from="1713859110410" duration="7921000" />
     </task>
     <task id="LOCAL-00001" summary="Добавлен спавн фигур и перемещение (только вправо)">
       <option name="closed" value="true" />
@@ -199,15 +205,7 @@
       <option name="project" value="LOCAL" />
       <updated>1713862475508</updated>
     </task>
-    <task id="LOCAL-00009" summary="Добавлено управление на ASWD">
-      <option name="closed" value="true" />
-      <created>1713870526574</created>
-      <option name="number" value="00009" />
-      <option name="presentableId" value="LOCAL-00009" />
-      <option name="project" value="LOCAL" />
-      <updated>1713870526574</updated>
-    </task>
-    <option name="localTasksCounter" value="10" />
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -233,10 +231,9 @@
     <MESSAGE value="Исправлен баг с щелями между блоками, добавлена сетка. В комммит добавлены а папка img" />
     <MESSAGE value="Добалено отображение текущего счета на экране" />
     <MESSAGE value="Добавлены все фигуры, изменена физика сдвига вправо-влево" />
-    <MESSAGE value="Добавлено управление на ASWD" />
-    <option name="LAST_COMMIT_MESSAGE" value="Добавлено управление на ASWD" />
+    <option name="LAST_COMMIT_MESSAGE" value="Добавлены все фигуры, изменена физика сдвига вправо-влево" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Pentomis$main.coverage" NAME="main Coverage Results" MODIFIED="1713873405115" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Pentomis$main.coverage" NAME="main Coverage Results" MODIFIED="1713870423139" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.9\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 7c0a44b0f32e28b23f90e05fef2e995376fd9fcd)
+++ b/.idea/misc.xml	(date 1713873997074)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.9" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="C:\Users\Stas 04 2022\anaconda3" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
